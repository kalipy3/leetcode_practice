nan.txt

:Author: kalipy
:Email: kalipy@debian
:Date: 2021-08-14 00:08

300

76

105

440

4

460

10

139

456

134

523

剑指offer45

673

443
-----------------------------------------------2022-01-24
96(for循环写法背一下)

//经典题 值得多看几遍
剑指offer26

834(难 题目都还没看)

1104(要多看几遍)

117/116(经典 多看几遍)

236/235(经典 多看几遍)

101(经典 多看几遍)


1/653/167 /15/16/259/121/18经典/454 必会 两数和 三数和 四数和

33/81/153/154(经典 必会一类题 旋转数组)

59/54 经典必会 螺旋矩阵
74/240 搜索二维矩阵

105经典必会

56二维数组的知识点得复习

31/556 下一个更大元素/排列 多看几遍写法，不然会做但写不出来代码 (可)

48对角线翻转的for循环背下来

64/62/63/174最小路径和 系列题(都是动态规划)
695/200/463/733/1034/1254/130 岛屿相关
79/212/208/ 单词搜索/前缀树(字典树)

162峰值相关

169/229/1150 摩尔投票法 众数


求最值：152/53最x子数组 动态规划
求个数：560/523/152/713/974/1/525 和/乘积为k子数组/1658 前缀和(带负数、和 适用) 双指针滑动窗口(正数、乘积 适用) (全可)

142/287/136/137/260/389/268/645/448/41/剪纸offer_03 找重复/丢失数字 位运算/哈希表

55/45 45题建议背下来，不好理解 跳跃游戏

11/42接雨水 双指针 经典必会
84/85/221/1127/739/456 最大矩阵 单调栈 动态规划
556/503/496 下一个更大元素 单调栈(可 好题)
当题目出现「找到最近一个比其大的元素」的字眼时，自然会想到「单调栈」

283/27/26/80/203/237 移动零 删除重复项

剪纸offer53_1/34/278/374/35/剪纸offer53_2 排序数字中找数字 猜数字  二分查找
1011/875 珂珂吃香蕉 二分

88/977/56/57/986/763/252/253/495/605/735/649 合并区间 划分区间 会议室

300/381 O(1) 时间插入、删除和获取随机元素

1438 优先队列

674/300(对比674题，300是不连续[真正的子序列]，674是连续[相当于子数组])/673 最长递增子序列 1143(最长公共子序列)
718/209/
72 编辑距离 动态规划

2/445/371/415/989/67/66/43 加法/乘法/模拟 43题多看几遍背下来
补充题36进制加法/补充题36进制减法

121/122/123/188/714/309 股票相关

24/19/61/138/426/876/108/109/25(多练几遍)/23(多练几遍) 234(注意易错点) 链表

215(多敲几遍)/239(多敲几遍)/剑指offer40/347 堆/优先队列
215/面试题17_14/剑指offer40 快速排序


273/12/13 数字与罗马数字互转


/* 排列与组合问题：
1. 什么时候使用 used 数组，什么时候使用 begin 变量
有些朋友可能会疑惑什么时候使用 used 数组，什么时候使用 begin 变量。这里为大家简单总结一下：
    排列问题，讲究顺序（即 [2, 2, 3] 与 [2, 3, 2] 视为不同列表时），需要记录哪些数字已经使用过，此时用 used 数组；
    组合问题，不讲究顺序（即 [2, 2, 3] 与 [2, 3, 2] 视为相同列表时），需要按照某种顺序搜索，此时使用 begin 变量。
2. 排列问题:for(int i = 0或1)中的i初始化一般写死
   组合问题:for(int i = idx或begin)中的i初始化一般写成dfs(int idx)中的参数 且for循环内部backtrack(int idx)中的idx调用时应该为backtrack(i)，而不是backtrack(idx);
*/
剑指offer_17/60(神仙题解)/46(神仙题解)/47 全排列(可)    77(神仙题解)/39/40/216/377 组合 (可)
39/40/518/322(请一定对比39和518题，你对dfs和动态规划的相关性会有认识)经典必会 组合相关 (可) 动态规划(请直接看代码随想录的)
518(这个递推格式常用，记住dp[i] = dp[i] + dp[i-num[i]]) (可)
**如果求组合(没有顺序要求)数就是外层for循环遍历物品，内层for遍历背包**。
**如果求排列(有顺序要求)数就是外层for遍历背包，内层for循环遍历物品**。
for (int i = 0; i < coins.size(); i++) { // 遍历物品
    for (int j = coins[i]; j <= amount; j++) { // 遍历背包容量
        dp[j] += dp[j - coins[i]];
    }
}
假设：coins[0] = 1，coins[1] = 5。

那么就是先把1加入计算，然后再把5加入计算，得到的方法数量只有{1, 5}这种情况。而不会出现{5, 1}的情况。

**所以这种遍历顺序中dp[j]里计算的是组合数！**

如果把两个for交换顺序，代码如下：

for (int j = 0; j <= amount; j++) { // 遍历背包容量
    for (int i = 0; i < coins.size(); i++) { // 遍历物品
        if (j - coins[i] >= 0) dp[j] += dp[j - coins[i]];
    }
}
背包容量的每一个值，都是经过 1 和 5 的计算，包含了{1, 5} 和 {5, 1}两种情况。

**此时dp[j]里算出来的就是排列数！**

31 下一个排列 双指针

3/76 滑动窗口

32/20/678/394 括号问题 栈
224/面试题_16_26_计算器/227  基本计算器/栈
1047 栈

22/17/39/93/842/97/139/386/剑指offer38/967/949/60/377/131/1312/剑指offer17 类多叉树的dfs/回溯

5/647/516/125/680 回文串问题 动态规划

8 实现atoi 28实现strstr (可)

468 正则匹配

手撕排序算法 补充题4/补充题6/补充题5

146/115/232/297/460/295/剑指offer_09/225(多练几遍)/208(多练几遍)/703/622/707/706/705/341 设计题

91/剪纸offer46 翻译数 动态规划

106/889 构造二叉树

662/958/114 树(可)

398 随机数

面试题08_11
//背包问题全集 神仙题解 链接：https://leetcode-cn.com/problems/last-stone-weight-ii/solution/yi-pian-wen-zhang-chi-tou-bei-bao-wen-ti-5lfv/

//前缀和全集 https://leetcode-cn.com/problems/binary-subarrays-with-sum/solution/de-liao-yi-wen-ba-qian-zhui-he-miao-sha-mqngx/

342 幂次方

242/438/49 字母异位词

405 十进制转16进制

337/198/213 打家劫舍


模拟题：https://leetcode-cn.com/problems/reconstruct-original-digits-from-english/solution/gong-shui-san-xie-nao-jin-ji-zhuan-wan-m-vg7a/

-------------------------------------------------------------------难以未做 或可以看懂但是考场应该做不出来的 ---
907/1524/1574

78/90 子集 回溯(可)

400 29

10

1504

459/214 kmp算法

-------------------------------------------------------------------------
极易错题

309
